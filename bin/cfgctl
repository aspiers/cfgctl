#!/usr/bin/perl

=head1 NAME

cfgctl - configuration file controller

=head1 SYNOPSIS

    $ cfgctl --help

=cut

use strict;
use warnings;

use File::Spec;
use FindBin qw($RealBin $RealScript);

use lib "$RealBin/../lib/perl5";
use Sh qw(abs_path);
use Cfg;
use Cfg::Cfg qw(%cfg);
use Cfg::CLI qw(debug %opts);

Cfg::CLI->process_options;
Cfg::CLI->check_options;
Cfg::Cfg->check;
Cfg->do_registration;

if ($opts{list} || $opts{sources} || $opts{destinations}) {
  Cfg->list_pkgs();
  exit 0;
}

my $queue = Cfg->get_pkg_queue;
exit 1 if $queue->empty;

if ($opts{update}) {
  Cfg->batch_update($queue->pkgs);
  exit 0 if $opts{'dry-run'};
}
elsif ($opts{install} || $opts{erase}) {
  Cfg->batch_fetch($queue->pkgs);
}
elsif ($opts{pull}) {
}
else {
  die "BUG";
}

foreach my $section_and_pkgs ($queue->sections_and_pkgs) {
  my ($section, $pkgs) = @$section_and_pkgs;
  debug(1, "# >> ", $section->to_string); 
  foreach my $pkg (@$pkgs) {
    my $description = $pkg->description;
    my $dst         = $pkg->dst;

    if ($pkg->deprecated) {
      debug(1, "#! DEPRECATING: $description");
      $pkg->deprecate;
      next;
    }

    if (! $pkg->src_local) {
      $pkg->fetch;
    }
    else {
      if ($opts{update}) {
        $pkg->update;
      }
      elsif ($opts{pull}) {
        $pkg->pull;
      }
    }

    if ($opts{erase}) {
      debug(1, "# Deinstalling: $description");
      $pkg->deinstall;
    }
    elsif ($opts{install}) {
      debug(1, "# Installing: $description");
      $pkg->install;
    }
  }
}

exit 0;

