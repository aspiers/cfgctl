#!/usr/bin/perl

use strict;
use warnings;

use Cwd;
use File::Find;
use File::stat;
use Getopt::Long;

sub usage {
  warn @_, "\n" if @_;
  die "usage: FIXME";
}

my %opts;
GetOptions(\%opts, 'target|t=s', 'stow-dir|d=s', 'dry-run|n') or usage();
usage() unless @ARGV == 1;

$opts{'stow-dir'} = '.' unless defined $opts{'stow-dir'};

my ($pkg) = @ARGV;

chdir($opts{'stow-dir'}) or usage("chdir($opts{'stow-dir'}) failed: $!\n");
chdir($pkg)              or usage("chdir($pkg) failed: $!\n");
my $install_image_dir = getcwd;
debug("starting in $install_image_dir\n");

-d $opts{target} or usage("target $opts{target} not a directory\n");

find(\&unstow, '.');

sub unstow {
  (my $path = $File::Find::name) =~ s!^\./!!;
  my $file = $_;
  debug("path is $path\n");
  if (-l "$opts{target}/$path") {
    my $symlink = "$opts{target}/$path";

    my $stat = stat($file) or die "stat($path) failed: $!\n";
    my $orig_ino = $stat->ino;

    $stat = stat($symlink) or die "stat($symlink) failed: $!\n";
    my $symlink_target_ino = $stat->ino;

    if ($orig_ino == $symlink_target_ino) {
      # symlink points to installation image
      #print("$symlink points to $install_image_dir/$path\n");
      if ($opts{'dry-run'}) {
        print "would unlink $symlink\n";
      }
      else {
        unlink($symlink) or die "unlink($symlink) failed: $!\n";
      }
    }
    else {
      print("$symlink doesn't point to $install_image_dir/$path\n");
    }
  }
  else {
    debug("ignoring non-symlink $path\n");
  }
}

sub debug {
#  warn @_;
}
